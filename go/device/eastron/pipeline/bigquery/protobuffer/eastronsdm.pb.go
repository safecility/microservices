// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: eastronsdm.proto

package protobuffer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// protoc --go_out=./  ./eastronsdm.proto
type EastronSdmBq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceUID            string  `protobuf:"bytes,1,opt,name=DeviceUID,proto3" json:"DeviceUID,omitempty"`
	Time                 string  `protobuf:"bytes,2,opt,name=Time,proto3" json:"Time,omitempty"`
	ImportActiveEnergy   float64 `protobuf:"fixed64,3,opt,name=ImportActiveEnergy,proto3" json:"ImportActiveEnergy,omitempty"`
	ExportActiveEnergy   float64 `protobuf:"fixed64,4,opt,name=ExportActiveEnergy,proto3" json:"ExportActiveEnergy,omitempty"`
	ActivePower          float64 `protobuf:"fixed64,5,opt,name=ActivePower,proto3" json:"ActivePower,omitempty"`
	InstantaneousCurrent float64 `protobuf:"fixed64,6,opt,name=InstantaneousCurrent,proto3" json:"InstantaneousCurrent,omitempty"`
	InstantaneousVoltage float64 `protobuf:"fixed64,7,opt,name=InstantaneousVoltage,proto3" json:"InstantaneousVoltage,omitempty"`
	PowerFactor          float64 `protobuf:"fixed64,8,opt,name=PowerFactor,proto3" json:"PowerFactor,omitempty"`
	RelayState           float64 `protobuf:"fixed64,9,opt,name=RelayState,proto3" json:"RelayState,omitempty"`
}

func (x *EastronSdmBq) Reset() {
	*x = EastronSdmBq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_eastronsdm_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EastronSdmBq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EastronSdmBq) ProtoMessage() {}

func (x *EastronSdmBq) ProtoReflect() protoreflect.Message {
	mi := &file_eastronsdm_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EastronSdmBq.ProtoReflect.Descriptor instead.
func (*EastronSdmBq) Descriptor() ([]byte, []int) {
	return file_eastronsdm_proto_rawDescGZIP(), []int{0}
}

func (x *EastronSdmBq) GetDeviceUID() string {
	if x != nil {
		return x.DeviceUID
	}
	return ""
}

func (x *EastronSdmBq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *EastronSdmBq) GetImportActiveEnergy() float64 {
	if x != nil {
		return x.ImportActiveEnergy
	}
	return 0
}

func (x *EastronSdmBq) GetExportActiveEnergy() float64 {
	if x != nil {
		return x.ExportActiveEnergy
	}
	return 0
}

func (x *EastronSdmBq) GetActivePower() float64 {
	if x != nil {
		return x.ActivePower
	}
	return 0
}

func (x *EastronSdmBq) GetInstantaneousCurrent() float64 {
	if x != nil {
		return x.InstantaneousCurrent
	}
	return 0
}

func (x *EastronSdmBq) GetInstantaneousVoltage() float64 {
	if x != nil {
		return x.InstantaneousVoltage
	}
	return 0
}

func (x *EastronSdmBq) GetPowerFactor() float64 {
	if x != nil {
		return x.PowerFactor
	}
	return 0
}

func (x *EastronSdmBq) GetRelayState() float64 {
	if x != nil {
		return x.RelayState
	}
	return 0
}

var File_eastronsdm_proto protoreflect.FileDescriptor

var file_eastronsdm_proto_rawDesc = []byte{
	0x0a, 0x10, 0x65, 0x61, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x73, 0x64, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x22, 0xec, 0x02, 0x0a, 0x0c, 0x45,
	0x61, 0x73, 0x74, 0x72, 0x6f, 0x6e, 0x53, 0x64, 0x6d, 0x42, 0x71, 0x12, 0x1c, 0x0a, 0x09, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x55, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2e, 0x0a,
	0x12, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x49, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x2e, 0x0a,
	0x12, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x65,
	0x72, 0x67, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x12, 0x45, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12,
	0x32, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x14, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73, 0x43, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x61, 0x6e,
	0x65, 0x6f, 0x75, 0x73, 0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x14, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x61, 0x6e, 0x65, 0x6f, 0x75, 0x73,
	0x56, 0x6f, 0x6c, 0x74, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6f, 0x77, 0x65, 0x72,
	0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0b, 0x50, 0x6f,
	0x77, 0x65, 0x72, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x6c,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x52,
	0x65, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x3b, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_eastronsdm_proto_rawDescOnce sync.Once
	file_eastronsdm_proto_rawDescData = file_eastronsdm_proto_rawDesc
)

func file_eastronsdm_proto_rawDescGZIP() []byte {
	file_eastronsdm_proto_rawDescOnce.Do(func() {
		file_eastronsdm_proto_rawDescData = protoimpl.X.CompressGZIP(file_eastronsdm_proto_rawDescData)
	})
	return file_eastronsdm_proto_rawDescData
}

var file_eastronsdm_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_eastronsdm_proto_goTypes = []any{
	(*EastronSdmBq)(nil), // 0: energy.EastronSdmBq
}
var file_eastronsdm_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_eastronsdm_proto_init() }
func file_eastronsdm_proto_init() {
	if File_eastronsdm_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_eastronsdm_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*EastronSdmBq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_eastronsdm_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_eastronsdm_proto_goTypes,
		DependencyIndexes: file_eastronsdm_proto_depIdxs,
		MessageInfos:      file_eastronsdm_proto_msgTypes,
	}.Build()
	File_eastronsdm_proto = out.File
	file_eastronsdm_proto_rawDesc = nil
	file_eastronsdm_proto_goTypes = nil
	file_eastronsdm_proto_depIdxs = nil
}
